DROP FUNCTION IF EXISTS isnt_procedure( NAME );
DROP FUNCTION IF EXISTS isnt_procedure( NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_procedure( NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_procedure ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS isnt_procedure( NAME, NAME );
DROP FUNCTION IF EXISTS isnt_procedure ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_procedure( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_procedure ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_procedure( NAME );
DROP FUNCTION IF EXISTS is_procedure( NAME, TEXT );
DROP FUNCTION IF EXISTS is_procedure( NAME, NAME[] );
DROP FUNCTION IF EXISTS is_procedure ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_procedure( NAME, NAME );
DROP FUNCTION IF EXISTS is_procedure ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_procedure( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS is_procedure ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS isnt_window( NAME );
DROP FUNCTION IF EXISTS isnt_window( NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_window( NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_window ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS isnt_window( NAME, NAME );
DROP FUNCTION IF EXISTS isnt_window ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_window( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_window ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_window( NAME );
DROP FUNCTION IF EXISTS is_window( NAME, TEXT );
DROP FUNCTION IF EXISTS is_window( NAME, NAME[] );
DROP FUNCTION IF EXISTS is_window ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_window( NAME, NAME );
DROP FUNCTION IF EXISTS is_window ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_window( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS is_window ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS isnt_normal_function( NAME );
DROP FUNCTION IF EXISTS isnt_normal_function( NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_normal_function( NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_normal_function ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS isnt_normal_function( NAME, NAME );
DROP FUNCTION IF EXISTS isnt_normal_function ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_normal_function( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_normal_function ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_normal_function( NAME );
DROP FUNCTION IF EXISTS is_normal_function( NAME, TEXT );
DROP FUNCTION IF EXISTS is_normal_function( NAME, NAME[] );
DROP FUNCTION IF EXISTS is_normal_function ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_normal_function( NAME, NAME );
DROP FUNCTION IF EXISTS is_normal_function ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_normal_function( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS is_normal_function ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS isnt_descendent_of( NAME, NAME );
DROP FUNCTION IF EXISTS isnt_descendent_of( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_descendent_of( NAME, NAME, INT );
DROP FUNCTION IF EXISTS isnt_descendent_of( NAME, NAME, INT, TEXT );
DROP FUNCTION IF EXISTS isnt_descendent_of( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS isnt_descendent_of( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_descendent_of( NAME, NAME, NAME, NAME, INT );
DROP FUNCTION IF EXISTS isnt_descendent_of( NAME, NAME, NAME, NAME, INT, TEXT );
DROP FUNCTION IF EXISTS is_descendent_of( NAME, NAME );
DROP FUNCTION IF EXISTS is_descendent_of( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_descendent_of( NAME, NAME, INT );
DROP FUNCTION IF EXISTS is_descendent_of( NAME, NAME, INT, TEXT );
DROP FUNCTION IF EXISTS is_descendent_of( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS is_descendent_of( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_descendent_of( NAME, NAME, NAME, NAME, INT );
DROP FUNCTION IF EXISTS is_descendent_of( NAME, NAME, NAME, NAME, INT, TEXT );
DROP FUNCTION IF EXISTS isnt_ancestor_of( NAME, NAME );
DROP FUNCTION IF EXISTS isnt_ancestor_of( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_ancestor_of( NAME, NAME, INT );
DROP FUNCTION IF EXISTS isnt_ancestor_of( NAME, NAME, INT, TEXT );
DROP FUNCTION IF EXISTS isnt_ancestor_of( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS isnt_ancestor_of( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_ancestor_of( NAME, NAME, NAME, NAME, INT );
DROP FUNCTION IF EXISTS isnt_ancestor_of( NAME, NAME, NAME, NAME, INT, TEXT );
DROP FUNCTION IF EXISTS is_ancestor_of( NAME, NAME );
DROP FUNCTION IF EXISTS is_ancestor_of( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_ancestor_of( NAME, NAME, INT );
DROP FUNCTION IF EXISTS is_ancestor_of( NAME, NAME, INT, TEXT );
DROP FUNCTION IF EXISTS is_ancestor_of( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS is_ancestor_of( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_ancestor_of( NAME, NAME, NAME, NAME, INT );
DROP FUNCTION IF EXISTS is_ancestor_of( NAME, NAME, NAME, NAME, INT, TEXT );
DROP FUNCTION IF EXISTS _ancestor_of( NAME, NAME, INT );
DROP FUNCTION IF EXISTS _ancestor_of( NAME, NAME, NAME, NAME, INT );
DROP FUNCTION IF EXISTS hasnt_inherited_tables( NAME );
DROP FUNCTION IF EXISTS hasnt_inherited_tables( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_inherited_tables( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_inherited_tables( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_inherited_tables( NAME );
DROP FUNCTION IF EXISTS has_inherited_tables( NAME, TEXT );
DROP FUNCTION IF EXISTS has_inherited_tables( NAME, NAME );
DROP FUNCTION IF EXISTS has_inherited_tables( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _inherited( NAME );
DROP FUNCTION IF EXISTS _inherited( NAME, NAME );
DROP FUNCTION IF EXISTS policy_cmd_is( NAME, NAME, text );
DROP FUNCTION IF EXISTS policy_cmd_is( NAME, NAME, text, text );
DROP FUNCTION IF EXISTS policy_cmd_is( NAME, NAME, NAME, text );
DROP FUNCTION IF EXISTS policy_cmd_is( NAME, NAME, NAME, text, text );
DROP FUNCTION IF EXISTS policy_roles_are( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS policy_roles_are( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS policy_roles_are( NAME, NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS policy_roles_are( NAME, NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS policies_are( NAME, NAME[] );
DROP FUNCTION IF EXISTS policies_are( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS policies_are( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS policies_are( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _array_to_sorted_string( name[], text );
DROP FUNCTION IF EXISTS _ident_array_to_sorted_string( name[], text );
DROP FUNCTION IF EXISTS partitions_are( NAME, NAME[] );
DROP FUNCTION IF EXISTS partitions_are( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS partitions_are( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS partitions_are( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _parts( NAME );
DROP FUNCTION IF EXISTS _parts( NAME, NAME );
DROP FUNCTION IF EXISTS is_partition_of ( NAME, NAME );
DROP FUNCTION IF EXISTS is_partition_of ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_partition_of ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS is_partition_of ( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _partof ( NAME, NAME );
DROP FUNCTION IF EXISTS _partof ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS isnt_partitioned ( NAME );
DROP FUNCTION IF EXISTS isnt_partitioned ( NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_partitioned ( NAME, NAME );
DROP FUNCTION IF EXISTS isnt_partitioned ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_partitioned ( NAME );
DROP FUNCTION IF EXISTS is_partitioned ( NAME, TEXT );
DROP FUNCTION IF EXISTS is_partitioned ( NAME, NAME );
DROP FUNCTION IF EXISTS is_partitioned ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_extension( NAME );
DROP FUNCTION IF EXISTS hasnt_extension( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_extension( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_extension( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_extension( NAME );
DROP FUNCTION IF EXISTS has_extension( NAME, TEXT );
DROP FUNCTION IF EXISTS has_extension( NAME, NAME );
DROP FUNCTION IF EXISTS has_extension( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _ext_exists( NAME );
DROP FUNCTION IF EXISTS _ext_exists( NAME, NAME );
DROP FUNCTION IF EXISTS extensions_are( NAME[] );
DROP FUNCTION IF EXISTS extensions_are( NAME[], TEXT );
DROP FUNCTION IF EXISTS extensions_are( NAME, NAME[] );
DROP FUNCTION IF EXISTS extensions_are( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _extensions();
DROP FUNCTION IF EXISTS _extensions( NAME );
DROP FUNCTION IF EXISTS foreign_tables_are ( NAME[] );
DROP FUNCTION IF EXISTS foreign_tables_are ( NAME, NAME[] );
DROP FUNCTION IF EXISTS foreign_tables_are ( NAME[], TEXT );
DROP FUNCTION IF EXISTS foreign_tables_are ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS hasnt_materialized_view ( NAME );
DROP FUNCTION IF EXISTS hasnt_materialized_view ( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_materialized_view ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_materialized_view ( NAME );
DROP FUNCTION IF EXISTS has_materialized_view ( NAME, TEXT );
DROP FUNCTION IF EXISTS has_materialized_view ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS materialized_view_owner_is ( NAME, NAME );
DROP FUNCTION IF EXISTS materialized_view_owner_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS materialized_view_owner_is ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS materialized_view_owner_is ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS materialized_views_are ( NAME[] );
DROP FUNCTION IF EXISTS materialized_views_are ( NAME, NAME[] );
DROP FUNCTION IF EXISTS materialized_views_are ( NAME[], TEXT );
DROP FUNCTION IF EXISTS materialized_views_are ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS server_privs_are ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS server_privs_are ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _get_server_privs (NAME, TEXT);
DROP FUNCTION IF EXISTS fdw_privs_are ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS fdw_privs_are ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _get_fdw_privs (NAME, TEXT);
DROP FUNCTION IF EXISTS column_privs_are ( NAME, NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS column_privs_are ( NAME, NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS column_privs_are ( NAME, NAME, NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS column_privs_are ( NAME, NAME, NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _get_col_privs(NAME, TEXT, NAME);
DROP FUNCTION IF EXISTS any_column_privs_are ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS any_column_privs_are ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS any_column_privs_are ( NAME, NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS any_column_privs_are ( NAME, NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _get_ac_privs(NAME, TEXT);
DROP FUNCTION IF EXISTS sequence_privs_are ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS sequence_privs_are ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS sequence_privs_are ( NAME, NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS sequence_privs_are ( NAME, NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _get_sequence_privs(NAME, TEXT);
DROP FUNCTION IF EXISTS tablespace_privs_are ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS tablespace_privs_are ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _get_tablespaceprivs (NAME, TEXT);
DROP FUNCTION IF EXISTS schema_privs_are ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS schema_privs_are ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _get_schema_privs(NAME, TEXT);
DROP FUNCTION IF EXISTS language_privs_are ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS language_privs_are ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _get_lang_privs (NAME, TEXT);
DROP FUNCTION IF EXISTS function_privs_are ( NAME, NAME[], NAME, NAME[] );
DROP FUNCTION IF EXISTS function_privs_are ( NAME, NAME[], NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS function_privs_are ( NAME, NAME, NAME[], NAME, NAME[] );
DROP FUNCTION IF EXISTS function_privs_are ( NAME, NAME, NAME[], NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _fprivs_are ( TEXT, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _get_func_privs(TEXT, TEXT);
DROP FUNCTION IF EXISTS database_privs_are ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS database_privs_are ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _get_db_privs(NAME, TEXT);
DROP FUNCTION IF EXISTS _db_privs();
DROP FUNCTION IF EXISTS table_privs_are ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS table_privs_are ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS table_privs_are ( NAME, NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS table_privs_are ( NAME, NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _table_privs();
DROP FUNCTION IF EXISTS _get_table_privs(NAME, TEXT);
DROP FUNCTION IF EXISTS _assets_are ( text, text[], text[], TEXT );
DROP FUNCTION IF EXISTS type_owner_is ( NAME, NAME );
DROP FUNCTION IF EXISTS type_owner_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS type_owner_is ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS type_owner_is ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _get_type_owner ( NAME );
DROP FUNCTION IF EXISTS _get_type_owner ( NAME, NAME );
DROP FUNCTION IF EXISTS opclass_owner_is( NAME, NAME );
DROP FUNCTION IF EXISTS opclass_owner_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS opclass_owner_is( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS opclass_owner_is ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _get_opclass_owner ( NAME );
DROP FUNCTION IF EXISTS _get_opclass_owner ( NAME, NAME );
DROP FUNCTION IF EXISTS language_owner_is ( NAME, NAME );
DROP FUNCTION IF EXISTS language_owner_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _get_language_owner( NAME );
DROP FUNCTION IF EXISTS index_owner_is ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS index_owner_is ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS index_owner_is ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS index_owner_is ( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _get_index_owner( NAME, NAME );
DROP FUNCTION IF EXISTS _get_index_owner( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS tablespace_owner_is ( NAME, NAME );
DROP FUNCTION IF EXISTS tablespace_owner_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _get_tablespace_owner( NAME );
DROP FUNCTION IF EXISTS function_owner_is( NAME, NAME[], NAME );
DROP FUNCTION IF EXISTS function_owner_is ( NAME, NAME[], NAME, TEXT );
DROP FUNCTION IF EXISTS function_owner_is( NAME, NAME, NAME[], NAME );
DROP FUNCTION IF EXISTS function_owner_is ( NAME, NAME, NAME[], NAME, TEXT );
DROP FUNCTION IF EXISTS _get_func_owner ( NAME, NAME[] );
DROP FUNCTION IF EXISTS _get_func_owner ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS foreign_table_owner_is ( NAME, NAME );
DROP FUNCTION IF EXISTS foreign_table_owner_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS foreign_table_owner_is ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS foreign_table_owner_is ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS composite_owner_is ( NAME, NAME );
DROP FUNCTION IF EXISTS composite_owner_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS composite_owner_is ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS composite_owner_is ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS sequence_owner_is ( NAME, NAME );
DROP FUNCTION IF EXISTS sequence_owner_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS sequence_owner_is ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS sequence_owner_is ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS view_owner_is ( NAME, NAME );
DROP FUNCTION IF EXISTS view_owner_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS view_owner_is ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS view_owner_is ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS table_owner_is ( NAME, NAME );
DROP FUNCTION IF EXISTS table_owner_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS table_owner_is ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS table_owner_is ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _get_rel_owner ( CHAR, NAME );
DROP FUNCTION IF EXISTS _get_rel_owner ( CHAR, NAME, NAME );
DROP FUNCTION IF EXISTS _get_rel_owner ( CHAR[], NAME );
DROP FUNCTION IF EXISTS _get_rel_owner ( CHAR[], NAME, NAME );
DROP FUNCTION IF EXISTS relation_owner_is ( NAME, NAME );
DROP FUNCTION IF EXISTS relation_owner_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS relation_owner_is ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS relation_owner_is ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _get_rel_owner ( NAME );
DROP FUNCTION IF EXISTS _get_rel_owner ( NAME, NAME );
DROP FUNCTION IF EXISTS schema_owner_is ( NAME, NAME );
DROP FUNCTION IF EXISTS schema_owner_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _get_schema_owner( NAME );
DROP FUNCTION IF EXISTS db_owner_is ( NAME, NAME );
DROP FUNCTION IF EXISTS db_owner_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _get_db_owner( NAME );
DROP FUNCTION IF EXISTS columns_are( NAME, NAME[] );
DROP FUNCTION IF EXISTS columns_are( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS columns_are( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS columns_are( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS operators_are ( TEXT[] );
DROP FUNCTION IF EXISTS operators_are( TEXT[], TEXT );
DROP FUNCTION IF EXISTS operators_are ( NAME, TEXT[] );
DROP FUNCTION IF EXISTS operators_are( NAME, TEXT[], TEXT );
DROP FUNCTION IF EXISTS display_oper ( NAME, OID );
DROP FUNCTION IF EXISTS casts_are ( TEXT[] );
DROP FUNCTION IF EXISTS casts_are ( TEXT[], TEXT );
DROP FUNCTION IF EXISTS _areni ( text, text[], text[], TEXT );
DROP FUNCTION IF EXISTS triggers_are( NAME, NAME[] );
DROP FUNCTION IF EXISTS triggers_are( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS triggers_are( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS triggers_are( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS row_eq( TEXT, anyelement );
DROP FUNCTION IF EXISTS row_eq( TEXT, anyelement, TEXT );
DROP FUNCTION IF EXISTS domain_type_isnt( TEXT, TEXT );
DROP FUNCTION IF EXISTS domain_type_isnt( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS domain_type_isnt( NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS domain_type_isnt( NAME, TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS domain_type_isnt( NAME, TEXT, NAME, TEXT );
DROP FUNCTION IF EXISTS domain_type_isnt( NAME, TEXT, NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS domain_type_is( TEXT, TEXT );
DROP FUNCTION IF EXISTS domain_type_is( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS domain_type_is( NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS domain_type_is( NAME, TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS domain_type_is( NAME, TEXT, NAME, TEXT );
DROP FUNCTION IF EXISTS domain_type_is( NAME, TEXT, NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS _get_dtype( NAME );
DROP FUNCTION IF EXISTS _get_dtype( NAME, TEXT, BOOLEAN );
DROP FUNCTION IF EXISTS _dexists ( NAME );
DROP FUNCTION IF EXISTS _dexists ( NAME, NAME );
DROP FUNCTION IF EXISTS enums_are ( NAME[] );
DROP FUNCTION IF EXISTS enums_are ( NAME[], TEXT );
DROP FUNCTION IF EXISTS enums_are ( NAME, NAME[] );
DROP FUNCTION IF EXISTS enums_are ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS domains_are ( NAME[] );
DROP FUNCTION IF EXISTS domains_are ( NAME[], TEXT );
DROP FUNCTION IF EXISTS domains_are ( NAME, NAME[] );
DROP FUNCTION IF EXISTS domains_are ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS types_are ( NAME[] );
DROP FUNCTION IF EXISTS types_are ( NAME[], TEXT );
DROP FUNCTION IF EXISTS _types_are ( NAME[], TEXT, CHAR[] );
DROP FUNCTION IF EXISTS types_are ( NAME, NAME[] );
DROP FUNCTION IF EXISTS types_are ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _types_are ( NAME, NAME[], TEXT, CHAR[] );
DROP FUNCTION IF EXISTS roles_are( NAME[] );
DROP FUNCTION IF EXISTS roles_are( NAME[], TEXT );
DROP FUNCTION IF EXISTS throws_imatching ( TEXT, TEXT );
DROP FUNCTION IF EXISTS throws_imatching ( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS throws_matching ( TEXT, TEXT );
DROP FUNCTION IF EXISTS throws_matching ( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS throws_ilike ( TEXT, TEXT );
DROP FUNCTION IF EXISTS throws_ilike ( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS throws_like ( TEXT, TEXT );
DROP FUNCTION IF EXISTS throws_like ( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS _tlike ( BOOLEAN, TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS collect_tap( VARCHAR[] );
DROP FUNCTION IF EXISTS collect_tap( VARIADIC text[] );
DROP FUNCTION IF EXISTS isnt_empty( TEXT );
DROP FUNCTION IF EXISTS isnt_empty( TEXT, TEXT );
DROP FUNCTION IF EXISTS is_empty( TEXT );
DROP FUNCTION IF EXISTS is_empty( TEXT, TEXT );
DROP FUNCTION IF EXISTS isa_ok( anyelement, regtype );
DROP FUNCTION IF EXISTS isa_ok( anyelement, regtype, TEXT );
DROP FUNCTION IF EXISTS results_ne( refcursor, anyarray );
DROP FUNCTION IF EXISTS results_ne( refcursor, anyarray, TEXT );
DROP FUNCTION IF EXISTS results_ne( refcursor, TEXT );
DROP FUNCTION IF EXISTS results_ne( refcursor, TEXT, TEXT );
DROP FUNCTION IF EXISTS results_ne( TEXT, refcursor );
DROP FUNCTION IF EXISTS results_ne( TEXT, refcursor, TEXT );
DROP FUNCTION IF EXISTS results_ne( TEXT, anyarray );
DROP FUNCTION IF EXISTS results_ne( TEXT, anyarray, TEXT );
DROP FUNCTION IF EXISTS results_ne( TEXT, TEXT );
DROP FUNCTION IF EXISTS results_ne( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS results_ne( refcursor, refcursor );
DROP FUNCTION IF EXISTS results_ne( refcursor, refcursor, text );
DROP FUNCTION IF EXISTS results_eq( refcursor, anyarray );
DROP FUNCTION IF EXISTS results_eq( refcursor, anyarray, TEXT );
DROP FUNCTION IF EXISTS results_eq( refcursor, TEXT );
DROP FUNCTION IF EXISTS results_eq( refcursor, TEXT, TEXT );
DROP FUNCTION IF EXISTS results_eq( TEXT, refcursor );
DROP FUNCTION IF EXISTS results_eq( TEXT, refcursor, TEXT );
DROP FUNCTION IF EXISTS results_eq( TEXT, anyarray );
DROP FUNCTION IF EXISTS results_eq( TEXT, anyarray, TEXT );
DROP FUNCTION IF EXISTS results_eq( TEXT, TEXT );
DROP FUNCTION IF EXISTS results_eq( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS results_eq( refcursor, refcursor );
DROP FUNCTION IF EXISTS results_eq( refcursor, refcursor, text );
DROP FUNCTION IF EXISTS bag_hasnt( TEXT, TEXT );
DROP FUNCTION IF EXISTS bag_hasnt( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS set_hasnt( TEXT, TEXT );
DROP FUNCTION IF EXISTS set_hasnt( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS bag_has( TEXT, TEXT );
DROP FUNCTION IF EXISTS bag_has( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS set_has( TEXT, TEXT );
DROP FUNCTION IF EXISTS set_has( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS _relcomp( TEXT, TEXT, TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS bag_ne( TEXT, anyarray );
DROP FUNCTION IF EXISTS bag_ne( TEXT, anyarray, TEXT );
DROP FUNCTION IF EXISTS bag_ne( TEXT, TEXT );
DROP FUNCTION IF EXISTS bag_ne( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS set_ne( TEXT, anyarray );
DROP FUNCTION IF EXISTS set_ne( TEXT, anyarray, TEXT );
DROP FUNCTION IF EXISTS set_ne( TEXT, TEXT );
DROP FUNCTION IF EXISTS set_ne( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS _relne( TEXT, anyarray, TEXT, TEXT );
DROP FUNCTION IF EXISTS _relne( TEXT, TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS _do_ne( TEXT, TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS bag_eq( TEXT, anyarray );
DROP FUNCTION IF EXISTS bag_eq( TEXT, anyarray, TEXT );
DROP FUNCTION IF EXISTS bag_eq( TEXT, TEXT );
DROP FUNCTION IF EXISTS bag_eq( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS set_eq( TEXT, anyarray );
DROP FUNCTION IF EXISTS set_eq( TEXT, anyarray, TEXT );
DROP FUNCTION IF EXISTS set_eq( TEXT, TEXT );
DROP FUNCTION IF EXISTS set_eq( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS _relcomp( TEXT, anyarray, TEXT, TEXT );
DROP FUNCTION IF EXISTS _relcomp( TEXT, TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS _docomp( TEXT, TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS _temptypes( TEXT );
DROP FUNCTION IF EXISTS _temptable ( anyarray, TEXT );
DROP FUNCTION IF EXISTS _temptable ( TEXT, TEXT );
DROP FUNCTION IF EXISTS runtests( );
DROP FUNCTION IF EXISTS runtests( TEXT );
DROP FUNCTION IF EXISTS runtests( NAME );
DROP FUNCTION IF EXISTS runtests( NAME, TEXT );
DROP FUNCTION IF EXISTS _runner( text[], text[], text[], text[], text[] );
DROP FUNCTION IF EXISTS diag_test_name(TEXT);
DROP FUNCTION IF EXISTS _cleanup();
DROP FUNCTION IF EXISTS _currtest();
DROP FUNCTION IF EXISTS do_tap( );
DROP FUNCTION IF EXISTS do_tap( text );
DROP FUNCTION IF EXISTS do_tap( name );
DROP FUNCTION IF EXISTS do_tap( name, text );
DROP FUNCTION IF EXISTS _is_verbose();
DROP FUNCTION IF EXISTS _runem( text[], boolean );
DROP FUNCTION IF EXISTS findfuncs( TEXT );
DROP FUNCTION IF EXISTS findfuncs( TEXT, TEXT );
DROP FUNCTION IF EXISTS findfuncs( NAME, TEXT );
DROP FUNCTION IF EXISTS findfuncs( NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS check_test( TEXT, BOOLEAN );
DROP FUNCTION IF EXISTS check_test( TEXT, BOOLEAN, TEXT );
DROP FUNCTION IF EXISTS check_test( TEXT, BOOLEAN, TEXT, TEXT );
DROP FUNCTION IF EXISTS check_test( TEXT, BOOLEAN, TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS check_test( TEXT, BOOLEAN, TEXT, TEXT, TEXT, BOOLEAN );
DROP FUNCTION IF EXISTS volatility_is( NAME, TEXT );
DROP FUNCTION IF EXISTS volatility_is( NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS volatility_is( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS volatility_is( NAME, NAME[], TEXT, TEXT );
DROP FUNCTION IF EXISTS volatility_is( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS volatility_is( NAME, NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS volatility_is( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS volatility_is( NAME, NAME, NAME[], TEXT, TEXT );
DROP FUNCTION IF EXISTS _vol ( NAME );
DROP FUNCTION IF EXISTS _vol ( NAME, NAME[] );
DROP FUNCTION IF EXISTS _vol ( NAME, NAME );
DROP FUNCTION IF EXISTS _vol ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS _refine_vol( text );
DROP FUNCTION IF EXISTS _expand_vol( char );
DROP FUNCTION IF EXISTS isnt_strict( NAME );
DROP FUNCTION IF EXISTS isnt_strict( NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_strict( NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_strict ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS isnt_strict( NAME, NAME );
DROP FUNCTION IF EXISTS isnt_strict ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_strict( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_strict ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_strict( NAME );
DROP FUNCTION IF EXISTS is_strict( NAME, TEXT );
DROP FUNCTION IF EXISTS is_strict( NAME, NAME[] );
DROP FUNCTION IF EXISTS is_strict ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_strict( NAME, NAME );
DROP FUNCTION IF EXISTS is_strict ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_strict( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS is_strict ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _strict ( NAME );
DROP FUNCTION IF EXISTS _strict ( NAME, NAME[] );
DROP FUNCTION IF EXISTS _strict ( NAME, NAME );
DROP FUNCTION IF EXISTS _strict ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_aggregate( NAME );
DROP FUNCTION IF EXISTS isnt_aggregate( NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_aggregate( NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_aggregate ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS isnt_aggregate( NAME, NAME );
DROP FUNCTION IF EXISTS isnt_aggregate ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_aggregate( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_aggregate ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_aggregate( NAME );
DROP FUNCTION IF EXISTS is_aggregate( NAME, TEXT );
DROP FUNCTION IF EXISTS is_aggregate( NAME, NAME[] );
DROP FUNCTION IF EXISTS is_aggregate ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_aggregate( NAME, NAME );
DROP FUNCTION IF EXISTS is_aggregate ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_aggregate( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS is_aggregate ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _type_func ( "char", NAME );
DROP FUNCTION IF EXISTS _type_func ( "char", NAME, NAME[] );
DROP FUNCTION IF EXISTS _type_func ( "char", NAME, NAME );
DROP FUNCTION IF EXISTS _type_func ( "char", NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_definer( NAME );
DROP FUNCTION IF EXISTS isnt_definer( NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_definer( NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_definer ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS isnt_definer( NAME, NAME );
DROP FUNCTION IF EXISTS isnt_definer ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_definer( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_definer ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_definer( NAME );
DROP FUNCTION IF EXISTS is_definer( NAME, TEXT );
DROP FUNCTION IF EXISTS is_definer( NAME, NAME[] );
DROP FUNCTION IF EXISTS is_definer ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_definer( NAME, NAME );
DROP FUNCTION IF EXISTS is_definer ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_definer( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS is_definer ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _definer ( NAME );
DROP FUNCTION IF EXISTS _definer ( NAME, NAME[] );
DROP FUNCTION IF EXISTS _definer ( NAME, NAME );
DROP FUNCTION IF EXISTS _definer ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS function_returns( NAME, TEXT );
DROP FUNCTION IF EXISTS function_returns( NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS function_returns( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS function_returns( NAME, NAME[], TEXT, TEXT );
DROP FUNCTION IF EXISTS function_returns( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS function_returns( NAME, NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS function_returns( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS function_returns( NAME, NAME, NAME[], TEXT, TEXT );
DROP FUNCTION IF EXISTS _returns ( NAME );
DROP FUNCTION IF EXISTS _returns ( NAME, NAME[] );
DROP FUNCTION IF EXISTS _returns ( NAME, NAME );
DROP FUNCTION IF EXISTS _returns ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS function_lang_is( NAME, NAME );
DROP FUNCTION IF EXISTS function_lang_is( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS function_lang_is( NAME, NAME[], NAME );
DROP FUNCTION IF EXISTS function_lang_is( NAME, NAME[], NAME, TEXT );
DROP FUNCTION IF EXISTS function_lang_is( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS function_lang_is( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS function_lang_is( NAME, NAME, NAME[], NAME );
DROP FUNCTION IF EXISTS function_lang_is( NAME, NAME, NAME[], NAME, TEXT );
DROP FUNCTION IF EXISTS _lang ( NAME );
DROP FUNCTION IF EXISTS _lang ( NAME, NAME[] );
DROP FUNCTION IF EXISTS _lang ( NAME, NAME );
DROP FUNCTION IF EXISTS _lang ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS _func_compare( NAME, NAME, boolean, TEXT);
DROP FUNCTION IF EXISTS _func_compare( NAME, NAME, anyelement, anyelement, TEXT);
DROP FUNCTION IF EXISTS _func_compare( NAME, NAME, NAME[], boolean, TEXT);
DROP FUNCTION IF EXISTS _func_compare( NAME, NAME, NAME[], anyelement, anyelement, TEXT);
DROP FUNCTION IF EXISTS _nosuch( NAME, NAME, NAME[]);
DROP FUNCTION IF EXISTS rule_is_on( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS rule_is_on( NAME, NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS rule_is_on( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS rule_is_on( NAME, NAME, NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS _rule_on( NAME, NAME );
DROP FUNCTION IF EXISTS _rule_on( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS _contract_on( TEXT );
DROP FUNCTION IF EXISTS _expand_on( char );
DROP FUNCTION IF EXISTS rule_is_instead( NAME, NAME );
DROP FUNCTION IF EXISTS rule_is_instead( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS rule_is_instead( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS rule_is_instead( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_rule( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_rule( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_rule( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_rule( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_rule( NAME, NAME );
DROP FUNCTION IF EXISTS has_rule( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_rule( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS has_rule( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _is_instead( NAME, NAME );
DROP FUNCTION IF EXISTS _is_instead( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS rules_are( NAME, NAME[] );
DROP FUNCTION IF EXISTS rules_are( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS rules_are( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS rules_are( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS opclasses_are ( NAME[] );
DROP FUNCTION IF EXISTS opclasses_are ( NAME[], TEXT );
DROP FUNCTION IF EXISTS opclasses_are ( NAME, NAME[] );
DROP FUNCTION IF EXISTS opclasses_are ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS hasnt_opclass( NAME );
DROP FUNCTION IF EXISTS hasnt_opclass( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_opclass( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_opclass( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_opclass( NAME );
DROP FUNCTION IF EXISTS has_opclass( NAME, TEXT );
DROP FUNCTION IF EXISTS has_opclass( NAME, NAME );
DROP FUNCTION IF EXISTS has_opclass( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _opc_exists( NAME );
DROP FUNCTION IF EXISTS _opc_exists( NAME, NAME );
DROP FUNCTION IF EXISTS language_is_trusted( NAME );
DROP FUNCTION IF EXISTS language_is_trusted( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_language( NAME );
DROP FUNCTION IF EXISTS hasnt_language( NAME, TEXT );
DROP FUNCTION IF EXISTS has_language( NAME );
DROP FUNCTION IF EXISTS has_language( NAME, TEXT );
DROP FUNCTION IF EXISTS _is_trusted( NAME );
DROP FUNCTION IF EXISTS languages_are( NAME[] );
DROP FUNCTION IF EXISTS languages_are( NAME[], TEXT );
DROP FUNCTION IF EXISTS groups_are( NAME[] );
DROP FUNCTION IF EXISTS groups_are( NAME[], TEXT );
DROP FUNCTION IF EXISTS users_are( NAME[] );
DROP FUNCTION IF EXISTS users_are( NAME[], TEXT );
DROP FUNCTION IF EXISTS indexes_are( NAME, NAME[] );
DROP FUNCTION IF EXISTS indexes_are( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS indexes_are( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS indexes_are( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS functions_are ( NAME[] );
DROP FUNCTION IF EXISTS functions_are ( NAME[], TEXT );
DROP FUNCTION IF EXISTS functions_are ( NAME, NAME[] );
DROP FUNCTION IF EXISTS functions_are ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS sequences_are ( NAME[] );
DROP FUNCTION IF EXISTS sequences_are ( NAME, NAME[] );
DROP FUNCTION IF EXISTS sequences_are ( NAME[], TEXT );
DROP FUNCTION IF EXISTS sequences_are ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS views_are ( NAME[] );
DROP FUNCTION IF EXISTS views_are ( NAME, NAME[] );
DROP FUNCTION IF EXISTS views_are ( NAME[], TEXT );
DROP FUNCTION IF EXISTS views_are ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS tables_are ( NAME[] );
DROP FUNCTION IF EXISTS tables_are ( NAME, NAME[] );
DROP FUNCTION IF EXISTS tables_are ( NAME[], TEXT );
DROP FUNCTION IF EXISTS tables_are ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _missing ( CHAR, NAME[] );
DROP FUNCTION IF EXISTS _missing ( CHAR, NAME, NAME[] );
DROP FUNCTION IF EXISTS _missing ( CHAR[], NAME[] );
DROP FUNCTION IF EXISTS _missing ( CHAR[], NAME, NAME[] );
DROP FUNCTION IF EXISTS _extras ( CHAR, NAME[] );
DROP FUNCTION IF EXISTS _extras ( CHAR, NAME, NAME[] );
DROP FUNCTION IF EXISTS _extras ( CHAR[], NAME[] );
DROP FUNCTION IF EXISTS _extras ( CHAR[], NAME, NAME[] );
DROP FUNCTION IF EXISTS schemas_are ( NAME[] );
DROP FUNCTION IF EXISTS schemas_are ( NAME[], TEXT );
DROP FUNCTION IF EXISTS tablespaces_are ( NAME[] );
DROP FUNCTION IF EXISTS tablespaces_are ( NAME[], TEXT );
DROP FUNCTION IF EXISTS _are ( text, name[], name[], TEXT );
DROP FUNCTION IF EXISTS hasnt_rightop ( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_rightop ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_rightop ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_rightop ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_rightop ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_rightop ( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_rightop ( NAME, NAME );
DROP FUNCTION IF EXISTS has_rightop ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_rightop ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS has_rightop ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_rightop ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS has_rightop ( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_leftop ( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_leftop ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_leftop ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_leftop ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_leftop ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_leftop ( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_leftop ( NAME, NAME );
DROP FUNCTION IF EXISTS has_leftop ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_leftop ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS has_leftop ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_leftop ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS has_leftop ( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_operator ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_operator ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_operator ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_operator ( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_operator ( NAME, NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_operator ( NAME, NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_operator ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS has_operator ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_operator ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS has_operator ( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_operator ( NAME, NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS has_operator ( NAME, NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _op_exists ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS _op_exists ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS _op_exists ( NAME, NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS cast_context_is( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS cast_context_is( NAME, NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS _get_context( NAME, NAME );
DROP FUNCTION IF EXISTS _expand_context( char );
DROP FUNCTION IF EXISTS hasnt_cast ( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_cast ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_cast ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_cast ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_cast ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_cast ( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_cast ( NAME, NAME );
DROP FUNCTION IF EXISTS has_cast ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_cast ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS has_cast ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_cast ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS has_cast ( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _cast_exists ( NAME, NAME );
DROP FUNCTION IF EXISTS _cast_exists ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS _cast_exists ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS _cmp_types(oid, name);
DROP FUNCTION IF EXISTS isnt_member_of( NAME, NAME );
DROP FUNCTION IF EXISTS isnt_member_of( NAME, NAME[] );
DROP FUNCTION IF EXISTS isnt_member_of( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS isnt_member_of( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_member_of( NAME, NAME );
DROP FUNCTION IF EXISTS is_member_of( NAME, NAME[] );
DROP FUNCTION IF EXISTS is_member_of( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_member_of( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _grolist ( NAME );
DROP FUNCTION IF EXISTS hasnt_group( NAME );
DROP FUNCTION IF EXISTS hasnt_group( NAME, TEXT );
DROP FUNCTION IF EXISTS has_group( NAME );
DROP FUNCTION IF EXISTS has_group( NAME, TEXT );
DROP FUNCTION IF EXISTS _has_group( NAME );
DROP FUNCTION IF EXISTS isnt_superuser( NAME );
DROP FUNCTION IF EXISTS isnt_superuser( NAME, TEXT );
DROP FUNCTION IF EXISTS is_superuser( NAME );
DROP FUNCTION IF EXISTS is_superuser( NAME, TEXT );
DROP FUNCTION IF EXISTS _is_super( NAME );
DROP FUNCTION IF EXISTS hasnt_user( NAME );
DROP FUNCTION IF EXISTS hasnt_user( NAME, TEXT );
DROP FUNCTION IF EXISTS has_user( NAME );
DROP FUNCTION IF EXISTS has_user( NAME, TEXT );
DROP FUNCTION IF EXISTS _has_user( NAME );
DROP FUNCTION IF EXISTS hasnt_role( NAME );
DROP FUNCTION IF EXISTS hasnt_role( NAME, TEXT );
DROP FUNCTION IF EXISTS has_role( NAME );
DROP FUNCTION IF EXISTS has_role( NAME, TEXT );
DROP FUNCTION IF EXISTS _has_role( NAME );
DROP FUNCTION IF EXISTS enum_has_labels( NAME, NAME[] );
DROP FUNCTION IF EXISTS enum_has_labels( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS enum_has_labels( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS enum_has_labels( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS hasnt_enum( NAME );
DROP FUNCTION IF EXISTS hasnt_enum( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_enum( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_enum( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_enum( NAME );
DROP FUNCTION IF EXISTS has_enum( NAME, TEXT );
DROP FUNCTION IF EXISTS has_enum( NAME, NAME );
DROP FUNCTION IF EXISTS has_enum( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_domain( NAME );
DROP FUNCTION IF EXISTS hasnt_domain( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_domain( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_domain( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_domain( NAME );
DROP FUNCTION IF EXISTS has_domain( NAME, TEXT );
DROP FUNCTION IF EXISTS has_domain( NAME, NAME );
DROP FUNCTION IF EXISTS has_domain( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_type( NAME );
DROP FUNCTION IF EXISTS hasnt_type( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_type( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_type( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_type( NAME );
DROP FUNCTION IF EXISTS has_type( NAME, TEXT );
DROP FUNCTION IF EXISTS has_type( NAME, NAME );
DROP FUNCTION IF EXISTS has_type( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _has_type( NAME, CHAR[] );
DROP FUNCTION IF EXISTS _has_type( NAME, NAME, CHAR[] );
DROP FUNCTION IF EXISTS hasnt_tablespace( NAME );
DROP FUNCTION IF EXISTS hasnt_tablespace( NAME, TEXT );
DROP FUNCTION IF EXISTS has_tablespace( NAME );
DROP FUNCTION IF EXISTS has_tablespace( NAME, TEXT );
DROP FUNCTION IF EXISTS has_tablespace( NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS hasnt_schema( NAME );
DROP FUNCTION IF EXISTS hasnt_schema( NAME, TEXT );
DROP FUNCTION IF EXISTS has_schema( NAME );
DROP FUNCTION IF EXISTS has_schema( NAME, TEXT );
DROP FUNCTION IF EXISTS trigger_is ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS trigger_is ( NAME, NAME, NAME, text );
DROP FUNCTION IF EXISTS trigger_is ( NAME, NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS trigger_is ( NAME, NAME, NAME, NAME, NAME, text );
DROP FUNCTION IF EXISTS hasnt_trigger ( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_trigger ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_trigger ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_trigger ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_trigger ( NAME, NAME );
DROP FUNCTION IF EXISTS has_trigger ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_trigger ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS has_trigger ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _trig ( NAME, NAME );
DROP FUNCTION IF EXISTS _trig ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS index_is_type ( NAME, NAME );
DROP FUNCTION IF EXISTS index_is_type ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS index_is_type ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS index_is_type ( NAME, NAME, NAME, NAME, text );
DROP FUNCTION IF EXISTS is_clustered ( NAME );
DROP FUNCTION IF EXISTS is_clustered ( NAME, NAME );
DROP FUNCTION IF EXISTS is_clustered ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS is_clustered ( NAME, NAME, NAME, text );
DROP FUNCTION IF EXISTS index_is_primary ( NAME );
DROP FUNCTION IF EXISTS index_is_primary ( NAME, NAME );
DROP FUNCTION IF EXISTS index_is_primary ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS index_is_primary ( NAME, NAME, NAME, text );
DROP FUNCTION IF EXISTS index_is_unique ( NAME );
DROP FUNCTION IF EXISTS index_is_unique ( NAME, NAME );
DROP FUNCTION IF EXISTS index_is_unique ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS index_is_unique ( NAME, NAME, NAME, text );
DROP FUNCTION IF EXISTS is_indexed ( NAME, NAME );
DROP FUNCTION IF EXISTS is_indexed ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS is_indexed ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS is_indexed ( NAME, NAME[] );
DROP FUNCTION IF EXISTS is_indexed ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS is_indexed ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS is_indexed ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _is_indexed( NAME, NAME, TEXT[] );
DROP FUNCTION IF EXISTS hasnt_index ( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_index ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_index ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_index ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_index ( NAME, NAME );
DROP FUNCTION IF EXISTS has_index ( NAME, NAME, text );
DROP FUNCTION IF EXISTS has_index ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS has_index ( NAME, NAME, NAME, text );
DROP FUNCTION IF EXISTS _is_schema( NAME );
DROP FUNCTION IF EXISTS has_index ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS has_index ( NAME, NAME, NAME[], text );
DROP FUNCTION IF EXISTS has_index ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS has_index ( NAME, NAME, NAME, NAME, text );
DROP FUNCTION IF EXISTS has_index ( NAME, NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS has_index ( NAME, NAME, NAME, NAME[], text );
DROP FUNCTION IF EXISTS _have_index( NAME, NAME);
DROP FUNCTION IF EXISTS _have_index( NAME, NAME, NAME);
DROP FUNCTION IF EXISTS _ikeys( NAME, NAME);
DROP FUNCTION IF EXISTS _ikeys( NAME, NAME, NAME);
DROP FUNCTION IF EXISTS can ( NAME[] );
DROP FUNCTION IF EXISTS can ( NAME[], TEXT );
DROP FUNCTION IF EXISTS can ( NAME, NAME[] );
DROP FUNCTION IF EXISTS can ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _pg_sv_type_array( OID[] );
DROP FUNCTION IF EXISTS hasnt_function( NAME );
DROP FUNCTION IF EXISTS hasnt_function( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_function( NAME, NAME[] );
DROP FUNCTION IF EXISTS hasnt_function ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS hasnt_function( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_function ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_function( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS hasnt_function ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS has_function( NAME );
DROP FUNCTION IF EXISTS has_function( NAME, TEXT );
DROP FUNCTION IF EXISTS has_function( NAME, NAME[] );
DROP FUNCTION IF EXISTS has_function ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS has_function( NAME, NAME );
DROP FUNCTION IF EXISTS has_function ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_function( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS has_function ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _got_func ( NAME );
DROP FUNCTION IF EXISTS _got_func ( NAME, NAME[] );
DROP FUNCTION IF EXISTS _got_func ( NAME, NAME );
DROP FUNCTION IF EXISTS _got_func ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS _funkargs ( NAME[] );
DROP VIEW IF EXISTS tap_funky;
DROP FUNCTION IF EXISTS _prokind( p_oid oid );
DROP FUNCTION IF EXISTS fk_ok ( NAME, NAME, NAME, NAME );
DROP FUNCTION IF EXISTS fk_ok ( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS fk_ok ( NAME, NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS fk_ok ( NAME, NAME, NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS fk_ok ( NAME, NAME[], NAME, NAME[] );
DROP FUNCTION IF EXISTS fk_ok ( NAME, NAME, NAME[], NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS fk_ok ( NAME, NAME[], NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS fk_ok ( NAME, NAME, NAME[], NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS col_has_check ( NAME, NAME );
DROP FUNCTION IF EXISTS col_has_check ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_has_check ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_has_check ( NAME, NAME[] );
DROP FUNCTION IF EXISTS col_has_check ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS col_has_check ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS has_check ( NAME );
DROP FUNCTION IF EXISTS has_check ( NAME, TEXT );
DROP FUNCTION IF EXISTS has_check ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_is_unique ( NAME, NAME );
DROP FUNCTION IF EXISTS col_is_unique ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_is_unique ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_is_unique ( NAME, NAME[] );
DROP FUNCTION IF EXISTS col_is_unique ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS col_is_unique ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS col_is_unique ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS col_is_unique ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _constraint ( NAME, CHAR, NAME[], TEXT, TEXT );
DROP FUNCTION IF EXISTS _constraint ( NAME, NAME, CHAR, NAME[], TEXT, TEXT );
DROP FUNCTION IF EXISTS has_unique ( TEXT );
DROP FUNCTION IF EXISTS has_unique ( TEXT, TEXT );
DROP FUNCTION IF EXISTS has_unique ( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS col_isnt_fk ( NAME, NAME );
DROP FUNCTION IF EXISTS col_isnt_fk ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_isnt_fk ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_isnt_fk ( NAME, NAME[] );
DROP FUNCTION IF EXISTS col_isnt_fk ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS col_isnt_fk ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS col_is_fk ( NAME, NAME );
DROP FUNCTION IF EXISTS col_is_fk ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_is_fk ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_is_fk ( NAME, NAME[] );
DROP FUNCTION IF EXISTS col_is_fk ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS col_is_fk ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _fkexists ( NAME, NAME[] );
DROP FUNCTION IF EXISTS _fkexists ( NAME, NAME, NAME[] );
DROP FUNCTION IF EXISTS hasnt_fk ( NAME );
DROP FUNCTION IF EXISTS hasnt_fk ( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_fk ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_fk ( NAME );
DROP FUNCTION IF EXISTS has_fk ( NAME, TEXT );
DROP FUNCTION IF EXISTS has_fk ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_isnt_pk ( NAME, NAME );
DROP FUNCTION IF EXISTS col_isnt_pk ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_isnt_pk ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_isnt_pk ( NAME, NAME[] );
DROP FUNCTION IF EXISTS col_isnt_pk ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS col_isnt_pk ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS col_is_pk ( NAME, NAME );
DROP FUNCTION IF EXISTS col_is_pk ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_is_pk ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_is_pk ( NAME, NAME[] );
DROP FUNCTION IF EXISTS col_is_pk ( NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS col_is_pk ( NAME, NAME, NAME[], TEXT );
DROP FUNCTION IF EXISTS _ckeys ( NAME, CHAR );
DROP FUNCTION IF EXISTS _ckeys ( NAME, NAME, CHAR );
DROP FUNCTION IF EXISTS _keys ( NAME, CHAR );
DROP FUNCTION IF EXISTS _keys ( NAME, NAME, CHAR );
DROP VIEW IF EXISTS pg_all_foreign_keys;
DROP FUNCTION IF EXISTS _pg_sv_table_accessible( OID, OID );
DROP FUNCTION IF EXISTS _pg_sv_column_array( OID, SMALLINT[] );
DROP FUNCTION IF EXISTS _ident_array_to_string( name[], text );
DROP FUNCTION IF EXISTS hasnt_pk ( NAME );
DROP FUNCTION IF EXISTS hasnt_pk ( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_pk ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_pk ( NAME );
DROP FUNCTION IF EXISTS has_pk ( NAME, TEXT );
DROP FUNCTION IF EXISTS has_pk ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _hasc ( NAME, CHAR );
DROP FUNCTION IF EXISTS _hasc ( NAME, NAME, CHAR );
DROP FUNCTION IF EXISTS col_default_is ( NAME, NAME, text );
DROP FUNCTION IF EXISTS col_default_is ( NAME, NAME, anyelement );
DROP FUNCTION IF EXISTS col_default_is ( NAME, NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS col_default_is ( NAME, NAME, anyelement, TEXT );
DROP FUNCTION IF EXISTS col_default_is ( NAME, NAME, NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS col_default_is ( NAME, NAME, NAME, anyelement, TEXT );
DROP FUNCTION IF EXISTS _cdi ( NAME, NAME, anyelement );
DROP FUNCTION IF EXISTS _cdi ( NAME, NAME, anyelement, TEXT );
DROP FUNCTION IF EXISTS _cdi ( NAME, NAME, NAME, anyelement, TEXT );
DROP FUNCTION IF EXISTS _def_is( TEXT, TEXT, anyelement, TEXT );
DROP FUNCTION IF EXISTS col_hasnt_default ( NAME, NAME );
DROP FUNCTION IF EXISTS col_hasnt_default ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_hasnt_default ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_has_default ( NAME, NAME );
DROP FUNCTION IF EXISTS col_has_default ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_has_default ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _has_def ( NAME, NAME );
DROP FUNCTION IF EXISTS _has_def ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS col_type_is ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_type_is ( NAME, NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS col_type_is ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_type_is ( NAME, NAME, NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS col_type_is ( NAME, NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS col_type_is ( NAME, NAME, NAME, NAME, TEXT, TEXT );
DROP FUNCTION IF EXISTS _quote_ident_like(TEXT, TEXT);
DROP FUNCTION IF EXISTS _get_col_ns_type ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS _get_col_type ( NAME, NAME );
DROP FUNCTION IF EXISTS _get_col_type ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS col_is_null ( table_name NAME, column_name NAME, description TEXT );
DROP FUNCTION IF EXISTS col_is_null ( schema_name NAME, table_name NAME, column_name NAME, description TEXT );
DROP FUNCTION IF EXISTS col_not_null ( table_name NAME, column_name NAME, description TEXT );
DROP FUNCTION IF EXISTS col_not_null ( schema_name NAME, table_name NAME, column_name NAME, description TEXT );
DROP FUNCTION IF EXISTS _col_is_null ( NAME, NAME, TEXT, bool );
DROP FUNCTION IF EXISTS _col_is_null ( NAME, NAME, NAME, TEXT, bool );
DROP FUNCTION IF EXISTS hasnt_column ( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_column ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_column ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_column ( NAME, NAME );
DROP FUNCTION IF EXISTS has_column ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_column ( NAME, NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _cexists ( NAME, NAME );
DROP FUNCTION IF EXISTS _cexists ( NAME, NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_composite ( NAME );
DROP FUNCTION IF EXISTS hasnt_composite ( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_composite ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_composite ( NAME );
DROP FUNCTION IF EXISTS has_composite ( NAME, TEXT );
DROP FUNCTION IF EXISTS has_composite ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_foreign_table ( NAME );
DROP FUNCTION IF EXISTS hasnt_foreign_table ( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_foreign_table ( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_foreign_table ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_foreign_table ( NAME );
DROP FUNCTION IF EXISTS has_foreign_table ( NAME, TEXT );
DROP FUNCTION IF EXISTS has_foreign_table ( NAME, NAME );
DROP FUNCTION IF EXISTS has_foreign_table ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_sequence ( NAME );
DROP FUNCTION IF EXISTS hasnt_sequence ( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_sequence ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_sequence ( NAME );
DROP FUNCTION IF EXISTS has_sequence ( NAME, TEXT );
DROP FUNCTION IF EXISTS has_sequence ( NAME, NAME );
DROP FUNCTION IF EXISTS has_sequence ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_view ( NAME );
DROP FUNCTION IF EXISTS hasnt_view ( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_view ( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_view ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_view ( NAME );
DROP FUNCTION IF EXISTS has_view ( NAME, TEXT );
DROP FUNCTION IF EXISTS has_view ( NAME, NAME );
DROP FUNCTION IF EXISTS has_view ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_table ( NAME );
DROP FUNCTION IF EXISTS hasnt_table ( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_table ( NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_table ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_table ( NAME );
DROP FUNCTION IF EXISTS has_table ( NAME, TEXT );
DROP FUNCTION IF EXISTS has_table ( NAME, NAME );
DROP FUNCTION IF EXISTS has_table ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _rexists ( CHAR, NAME );
DROP FUNCTION IF EXISTS _rexists ( CHAR, NAME, NAME );
DROP FUNCTION IF EXISTS _rexists ( CHAR[], NAME );
DROP FUNCTION IF EXISTS _rexists ( CHAR[], NAME, NAME );
DROP FUNCTION IF EXISTS hasnt_relation ( NAME );
DROP FUNCTION IF EXISTS hasnt_relation ( NAME, TEXT );
DROP FUNCTION IF EXISTS hasnt_relation ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS has_relation ( NAME );
DROP FUNCTION IF EXISTS has_relation ( NAME, TEXT );
DROP FUNCTION IF EXISTS has_relation ( NAME, NAME, TEXT );
DROP FUNCTION IF EXISTS _relexists ( NAME );
DROP FUNCTION IF EXISTS _relexists ( NAME, NAME );
DROP FUNCTION IF EXISTS performs_within(TEXT, NUMERIC, NUMERIC);
DROP FUNCTION IF EXISTS performs_within(TEXT, NUMERIC, NUMERIC, TEXT);
DROP FUNCTION IF EXISTS performs_within(TEXT, NUMERIC, NUMERIC, INT);
DROP FUNCTION IF EXISTS performs_within(TEXT, NUMERIC, NUMERIC, INT, TEXT);
DROP FUNCTION IF EXISTS _time_trials(TEXT, INT, NUMERIC);
DROP TYPE IF EXISTS _time_trial_type;
DROP FUNCTION IF EXISTS performs_ok ( TEXT, NUMERIC );
DROP FUNCTION IF EXISTS performs_ok ( TEXT, NUMERIC, TEXT );
DROP FUNCTION IF EXISTS lives_ok ( TEXT );
DROP FUNCTION IF EXISTS lives_ok ( TEXT, TEXT );
DROP FUNCTION IF EXISTS _error_diag( TEXT, TEXT, TEXT, TEXT, TEXT, TEXT, TEXT, TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS throws_ok ( TEXT, int4 );
DROP FUNCTION IF EXISTS throws_ok ( TEXT, int4, TEXT );
DROP FUNCTION IF EXISTS throws_ok ( TEXT, int4, TEXT, TEXT );
DROP FUNCTION IF EXISTS throws_ok ( TEXT );
DROP FUNCTION IF EXISTS throws_ok ( TEXT, TEXT );
DROP FUNCTION IF EXISTS throws_ok ( TEXT, TEXT, TEXT );
DROP FUNCTION IF EXISTS throws_ok ( TEXT, CHAR(5), TEXT, TEXT );
DROP FUNCTION IF EXISTS _query( TEXT );
DROP FUNCTION IF EXISTS skip( int );
DROP FUNCTION IF EXISTS skip( int, text );
DROP FUNCTION IF EXISTS skip ( text );
DROP FUNCTION IF EXISTS skip ( why text, how_many int );
DROP FUNCTION IF EXISTS _todo();
DROP FUNCTION IF EXISTS todo_end ();
DROP FUNCTION IF EXISTS in_todo ();
DROP FUNCTION IF EXISTS todo_start ();
DROP FUNCTION IF EXISTS todo_start (text);
DROP FUNCTION IF EXISTS todo ( how_many int );
DROP FUNCTION IF EXISTS todo ( why text );
DROP FUNCTION IF EXISTS todo ( how_many int, why text );
DROP FUNCTION IF EXISTS todo ( why text, how_many int );
DROP FUNCTION IF EXISTS fail ();
DROP FUNCTION IF EXISTS fail ( text );
DROP FUNCTION IF EXISTS pass ();
DROP FUNCTION IF EXISTS pass ( text );
DROP FUNCTION IF EXISTS cmp_ok (anyelement, text, anyelement);
DROP FUNCTION IF EXISTS cmp_ok (anyelement, text, anyelement, text);
DROP FUNCTION IF EXISTS unialike ( anyelement, text );
DROP FUNCTION IF EXISTS unialike ( anyelement, text, text );
DROP FUNCTION IF EXISTS unalike ( anyelement, text );
DROP FUNCTION IF EXISTS unalike ( anyelement, text, text );
DROP FUNCTION IF EXISTS doesnt_imatch ( anyelement, text );
DROP FUNCTION IF EXISTS doesnt_imatch ( anyelement, text, text );
DROP FUNCTION IF EXISTS doesnt_match ( anyelement, text );
DROP FUNCTION IF EXISTS doesnt_match ( anyelement, text, text );
DROP FUNCTION IF EXISTS _unalike ( BOOLEAN, ANYELEMENT, TEXT, TEXT );
DROP FUNCTION IF EXISTS ialike ( anyelement, text );
DROP FUNCTION IF EXISTS ialike ( anyelement, text, text );
DROP FUNCTION IF EXISTS alike ( anyelement, text );
DROP FUNCTION IF EXISTS alike ( anyelement, text, text );
DROP FUNCTION IF EXISTS imatches ( anyelement, text );
DROP FUNCTION IF EXISTS imatches ( anyelement, text, text );
DROP FUNCTION IF EXISTS matches ( anyelement, text );
DROP FUNCTION IF EXISTS matches ( anyelement, text, text );
DROP FUNCTION IF EXISTS _alike ( BOOLEAN, ANYELEMENT, TEXT, TEXT );
DROP FUNCTION IF EXISTS isnt (anyelement, anyelement);
DROP FUNCTION IF EXISTS isnt (anyelement, anyelement, text);
DROP FUNCTION IF EXISTS is (anyelement, anyelement);
DROP FUNCTION IF EXISTS is (anyelement, anyelement, text);
DROP FUNCTION IF EXISTS ok ( boolean );
DROP FUNCTION IF EXISTS ok ( boolean, text );
DROP FUNCTION IF EXISTS diag( VARIADIC anyarray );
DROP FUNCTION IF EXISTS diag( VARIADIC text[] );
DROP FUNCTION IF EXISTS diag ( msg anyelement );
DROP FUNCTION IF EXISTS diag ( msg text );
DROP FUNCTION IF EXISTS finish (exception_on_failure BOOLEAN);
DROP FUNCTION IF EXISTS _finish (INTEGER, INTEGER, INTEGER, BOOLEAN);
DROP FUNCTION IF EXISTS num_failed ();
DROP FUNCTION IF EXISTS add_result ( bool, bool, text, text, text );
DROP FUNCTION IF EXISTS _add ( text, integer );
DROP FUNCTION IF EXISTS _add ( text, integer, text );
DROP FUNCTION IF EXISTS _set ( integer, integer );
DROP FUNCTION IF EXISTS _set ( text, integer );
DROP FUNCTION IF EXISTS _set ( text, integer, text );
DROP FUNCTION IF EXISTS _get_note ( integer );
DROP FUNCTION IF EXISTS _get_note ( text );
DROP FUNCTION IF EXISTS _get_latest ( text, integer );
DROP FUNCTION IF EXISTS _get_latest ( text );
DROP FUNCTION IF EXISTS _get ( text );
DROP FUNCTION IF EXISTS no_plan();
DROP FUNCTION IF EXISTS plan( integer );
DROP FUNCTION IF EXISTS pgtap_version();
DROP FUNCTION IF EXISTS os_name();
DROP FUNCTION IF EXISTS pg_version_num();
DROP FUNCTION IF EXISTS pg_version();
